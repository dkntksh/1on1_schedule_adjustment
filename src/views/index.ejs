<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title></title>
        <link rel="stylesheet" href="/stylesheets/style.css" />
    </head>
    <body onload="init_view()">
        <div id="app">
          <label for="user-names">名前を改行して入力してください</label>
          <br>
          <textarea v-model="users" cols="40" rows="10"></textarea>
          <button id="name-pick" value="button1" v-on:click="clickMemberTable">表を作成する</button>
        </div>
        <div v-if="isDisplay" id="second-view">
          <table>
            <thead>
              <tr>
                <th v-for="column in columns" :key="column.id">
                  {{ column.userName }}
                </th>
              </tr>
            </thead>
            <tbody>
              <tr v-for="value in values" :key="value.id">
                <template v-for="(id, index) in ids">
                  <td>
                    <template v-if="columns[index].component_name !== null">
                      <component
                        v-bind:is="columns[index].component_name"
                        :array="[value[id]]"
                      ></component>
                    </template>
                    <template v-else>
                      {{ value[id] }}
                    </template>
                  </td>
                </template>
              </tr>
            </tbody>
          </table>
          <br>
          <div>
            <label>開始日：<input type="date" id="start-date"/></label>
          </div>
          <div>
            対象の曜日
            <label for=""><input type="checkbox" class="js-dow">月曜</label>
            <label for=""><input type="checkbox" class="js-dow">火曜</label>
            <label for=""><input type="checkbox" class="js-dow">水曜</label>
            <label for=""><input type="checkbox" class="js-dow">木曜</label>
            <label for=""><input type="checkbox" class="js-dow">金曜</label>
            <label for=""><input type="checkbox" class="js-dow">土曜</label>
            <label for=""><input type="checkbox" class="js-dow">日曜</label>
          </div>
          <div>
            祝日を日程に含まない
            <label for=""><input type="checkbox" class="js-dow">祝日を日程に含まない</label>
          </div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script><!-- 開発バージョンのvue.js -->
        <script>
          new Vue({
            el: "#app",
            data() {
              return {
                  isDisplay: false, // 開始日等を非表示
                  users: [],
                  columns: [],
                  values: [],
              }
            },
            methods: {
              clickMemberTable(){


                let columnsObj = []
                let usersArray = this.users.split(/\r?\n/g);
                
                usersArray.forEach((user, index) => {
                  columnsObj[index] = {id: index, userName: user};
                })
                
                this.columns = columnsObj;
                console.log(this.columns)
                
                // テーブルの表示
                this.isDisplay = true
              }
            },
            mounted: function () {// 初期表示
              // console.log('mounted');
              // console.log(this.$el);
            },
          })
        </script>
    </body>
</html>
<script>
  function init_view(){
    // 二段目を非表示にする
    document.getElementById('second-view').style.display ="none";
  }

  // 二段目にテーブルを作成する
  function create_member_table(){
    var user_element = document.getElementById('user-names').value;
    var users = user_element.split(/\r\n|\r|\n/);
    var table = document.querySelector("table");

    //ヘッダー（TH）
    var row = table.insertRow(-1);
    var th0 = document.createElement("th");
    row.appendChild(th0);
    th0.innerHTML=" ";
    th0.width = 100;
    for(var i=0; i<users.length; i++){
      var th = document.createElement("th");
      row.appendChild(th);
      th.innerHTML=users[i];
      th.width = 100;
    }
    table.width = 100 + 100*users.length;
    
    //データ行（TR）
    for(var r=0; r<users.length; r++){
      var row = table.insertRow(-1);
      var cell1 = row.insertCell(-1);
      cell1.className = 'item';
      cell1.innerHTML = users[r];
      for(c=1; c<=users.length; c++){
        var cell = row.insertCell(-1);
        cell.className = 'value';
        cell.setAttribute('contenteditable','true');
        cell.setAttribute('id','R'+r+'C'+c);
        if(r == (c - 1)){
          // 同じ人は背景色を変えて、初期値をハイフンにする
          cell.style.backgroundColor = "#696969"
          let newText = document.createTextNode('----------');
          cell.appendChild(newText);
        } else {
          cell.onclick = clicked;
        }
      }
    } 

    // 表示する
    document.getElementById('second-view').style.display ="";
  }

  function clicked(e) {
    alert(String(e));
    e.innerHTML = '×';
  }
</script>